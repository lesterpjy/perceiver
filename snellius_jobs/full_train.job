#!/bin/bash

#SBATCH --partition=gpu_a100
#SBATCH --gres=gpu:1            # Reduced to 1 GPU to avoid DDP issues
#SBATCH --cpus-per-task=9
#SBATCH --gpus=1                # Reduced to 1 GPU to avoid DDP issues
#SBATCH --job-name=TrainPerceiverIO
#SBATCH --ntasks=1
#SBATCH --time=04:00:00         # Increased time for full train-eval-test cycle
#SBATCH --mem=48000M            # Increased memory for more comprehensive analysis
#SBATCH --output=outfiles/perceiver_train_%A.out

module purge
module load 2023
module load Anaconda3/2023.07-2

# Set working directory to repository root
cd ~/group-michal/perceiver/

# Activate perceiver-io environment
echo "Activating perceiver-io environment..."
source activate perceiver-io

# Install critical dependencies directly with pip
echo "Installing dependencies..."
pip install -r local_requirements.txt

# Install the project in development mode
echo "Installing the project in development mode..."
pip install -e .

# Create necessary directories
mkdir -p results_full
mkdir -p outfiles_full
mkdir -p logs

# Prepare configuration files
echo "Preparing configuration files..."
CONFIG_DIR="examples/training/img_clf"

# Set environment variables to help with DDP issues
export CUDA_VISIBLE_DEVICES=0  # Use only the first GPU
export PL_TORCH_DISTRIBUTED_BACKEND=gloo  # Use gloo as fallback for nccl

# Enable tensor cores properly
echo "Enabling tensor cores for better performance..."
echo "import torch; torch.set_float32_matmul_precision('medium')" > set_precision.py
python set_precision.py

echo "Starting training with single GPU (no DDP)..."
srun python -m examples.training.img_clf.full_train --config ${CONFIG_DIR}/perceiver_config.yaml --trainer.strategy=auto --training.devices=1